// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using System.Diagnostics;
using CoreGraphics;

namespace NSViewMouseTrackingInVisibleRect
{
    public partial class MainView : NSView
    {
        public bool InVisibleRect
        {
            get => inVisibleRect;
            set { inVisibleRect = value; InitTracking(); }
        }
        private bool inVisibleRect = false;
        private NSTrackingArea trackingArea = null;
        private CGRect trackingRect;

        public MainView(IntPtr handle) : base(handle)
        {
        }

        /// <summary>
        /// トラッキングの設定を行います
        /// </summary>
        private void InitTracking()
        {
            if (trackingArea != null)
            {
                this.RemoveTrackingArea(trackingArea);
            }

            NSTrackingAreaOptions options = NSTrackingAreaOptions.ActiveAlways | NSTrackingAreaOptions.MouseEnteredAndExited | NSTrackingAreaOptions.MouseMoved;
            if (InVisibleRect)
                options |= NSTrackingAreaOptions.InVisibleRect;

            trackingRect = Bounds;
            trackingArea = new NSTrackingArea(trackingRect, options, this, null);
            AddTrackingArea(trackingArea);
        }

        public override void MouseEntered(NSEvent theEvent) => Debug.WriteLine("MouseEntered");
        public override void MouseExited(NSEvent theEvent) => Debug.WriteLine("MouseExited");
        public override void MouseMoved(NSEvent theEvent) => Debug.WriteLine("MouseMoved");

        public override void DrawRect(CoreGraphics.CGRect dirtyRect)
        {
            NSColor.Red.Set();
            var boundsPath = NSBezierPath.FromRect(Bounds);
            boundsPath.LineWidth = 10;
            boundsPath.Stroke();

            NSColor.Blue.Set();
            var trackingPath = NSBezierPath.FromRect(trackingRect);
            trackingPath.LineWidth = 5;
            trackingPath.Stroke();
        }
    }
}
