// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using CoreGraphics;

namespace NSViewConvertPoint
{
    public partial class MainView : NSView
    {
        NSTrackingArea trackingArea;
        public event EventHandler<MouseEventArgs> OnMouseMoved;

        public MainView(IntPtr handle) : base(handle)
        {
            trackingArea = new NSTrackingArea(
                Bounds,
                NSTrackingAreaOptions.ActiveAlways | NSTrackingAreaOptions.MouseMoved | NSTrackingAreaOptions.InVisibleRect,
                this,
                null);
            AddTrackingArea(trackingArea);
        }

        public override void DrawRect(CoreGraphics.CGRect dirtyRect)
        {
            NSColor.Red.Set();
            NSGraphics.FrameRect(Bounds);
        }

        public override void MouseMoved(NSEvent theEvent)
        {
            base.MouseMoved(theEvent);
            var locationInWindow = theEvent.LocationInWindow;
            var mouseLocation = NSEvent.CurrentMouseLocation;
            var locationInView = this.ConvertPointFromView(locationInWindow, null);
            OnMouseMoved?.Invoke(this, new MouseEventArgs(locationInWindow, mouseLocation, locationInView));
        }
    }

    public class MouseEventArgs : EventArgs
    {
        public CGPoint LocationInWindow { get; }
        public CGPoint MouseLocation { get; }
        public CGPoint LocationInView { get; }
        public MouseEventArgs(CGPoint locationInWindow, CGPoint mouseLocation, CGPoint locationInView) : base()
        {
            LocationInWindow = locationInWindow;
            MouseLocation = mouseLocation;
            LocationInView = locationInView;
        }
    }
}
