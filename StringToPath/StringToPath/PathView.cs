// This file has been autogenerated from a class added in the UI designer.

using System;
using AppKit;
using CoreGraphics;
using CoreText;
using Foundation;

namespace StringToPath
{
    /// <summary>
    /// 文字列をパスに変換して表示する
    /// </summary>
    public partial class PathView : NSView
    {
        /// <summary>
        /// 文字列のフォント
        /// </summary>
        /// <value>The font.</value>
        public NSFont Font { get => font; set { font = value; NeedsDisplay = true; } }
        NSFont font = NSFont.LabelFontOfSize(12);

        /// <summary>
        /// 文字列
        /// </summary>
        public string StringValue { get => text; set { text = value; NeedsDisplay = true; } }
        string text = "";

        public PathView(IntPtr handle) : base(handle)
        {
        }

        public override void DrawRect(CGRect dirtyRect)
        {
            NSColor.Red.Set();
            NSGraphics.FrameRect(Bounds);

            NSColor.Black.Set();
            NSBezierPath path = CreatePath(font, text);
            path.Stroke();
        }

        /// <summary>
        /// 文字列のパスを作成する
        /// </summary>
        static NSBezierPath CreatePath(NSFont font, string text)
        {
            NSBezierPath path = new NSBezierPath();
            path.MoveTo(CGPoint.Empty);

            NSMutableAttributedString attributes = new NSMutableAttributedString(text);
            attributes.AddAttribute(NSStringAttributeKey.Font, font, new NSRange(0, text.Length));

            CTLine ctLine = new CTLine(attributes);
            CTRun[] runs = ctLine.GetGlyphRuns();
            foreach (CTRun run in runs)
            {
                foreach (var glyph in run.GetGlyphs())
                {
                    path.AppendPathWithCGGlyph(glyph, font);
                }

            }
            return path;
        }
    }
}
